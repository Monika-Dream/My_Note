 - 是一个高性能 key-value 数据库
 - 下载: https://zhuanlan.zhihu.com/p/37982685
 - 端口号 6379						MySQL 3306
 - 先打开 redis-server.exe 再打开 redis-cli.exe 开启服务
 - FLUSHALL 删除所有内容
--------------------------------------------------------------------------------

 - redis 所支持的五种类型
     - 字符串      String
     - 哈希表      Hash Map
     - 列表        List
     - 集合        Sets
     - 有序集合    Sorted Sets

-------------------------------------------------------------------------------- redis 换库

1.redis 默认会给予我们 16 个库, 通过 [0-15] 来标识, 默认第一个
 - select 10 切换库

-------------------------------------------------------------------------------- redis [ String ] 增删改查

 - 1.正常的设置与取出数据
set 键名 键值
get 键名 键值

 - 2.给数据加持过期事件
setex 键名 倒计时/秒 键值      属性创建时就设置
ttl 键名                      查看离过期还有多少事件
expire 键名 倒计时/秒          给数据设置过期事件

 - 3.查看数据库中的所有数据
keys 正则

 - 4.设置与获取多个值
mset 键名 键值 键名 键值
mget 键名 键名

 - 5.判断键是否存在( 存在返回 1 不存在返回 0 )
exists name 

 - 6.查看键对应的 value 类型( 为 redis 支持的五种类型的一种 )
type a1

 - 7.删除数据( 可选多个 )
del 键名 键名

-------------------------------------------------------------------------------- redis [ Hash Map ] 增删改查

 - 1.单个的设置与取出数据 ( 单个 )
hset 类 键名 键值            hset person name Monika / hset person age 18
hget 类 键名                 必须全输

 - 2.多个的设置与取出数据 ( 单个 )
hmset 类 键名 键值 键名 键值 键名 键值
hmget 类 键名 键名 键名

 - 3.直接获取 类 的多个相关键名
hkeys 类名

 - 4.直接获取 类 的多个相关键值
hvals 类名

 - 5.删除 类 里面的键名与键值
hdel 类 键名

 - 6.关于修改值直接再次赋值就行了
hset person age 18
hset person age 20
hget person age

 - 7.根据类名获取所有
hgetall 类名


-------------------------------------------------------------------------------- redis [ list ] 增删改查

 - 1.添加数据
lpush 列表名 值1 值2 值3                                  值3 值2 值1            ( 从左边加入 )
rpush 列表名 值1 值2 值3                                  值1 值2 值3            ( 从右边加入 )

 - 2.读取全部列表数据
lrange 列表名 开始位置(0) 结束位置(-1)                                             左边
                                                                                 数据
 - 3.删除数据                                                                     右边
lrem 列表名 程度 删哪个             程度: 左边删(1)个, 右边删(-1)个, 0全删     
lrem club 1/-1/0 img

 - 4.保留区间
ltrim list 0 2                     只保留列表 list 的前三个元素, 其余全部删除 

-------------------------------------------------------------------------------- redis [ set ] 增删改查

 - 没有顺序, 无法重复, 无法修改 ( 删了再加 ), 唯一性

 - 1.添加数据
sadd 列表名 数据 数据 数据

 - 2.拿到列表全部数据
smembers 列表名

 - 3.移除数据
srem 列表名 数据

-------------------------------------------------------------------------------- redis [ Sorted Sets ] 增删改查

 - 顺序, string类型, 唯一性, 拥有权重, 无法修改

 - 1.增加数据 
zadd 列表名 权重 数据 权重 数据 权重 数据
例子: zadd test 100 Monika_100 82 Sayori_60 98 Yuri_98 86 Natsuki_86

 - 2.查找数据
zrange test 0 -1

 - 3.删除数据
zrem 列表名 数据 数据 

-------------------------------------------------------------------------------- python 操作 redis

 - pip install redis

from redis import Redis
redis_cli = Redis()

redis_cli.set("name","Monika")                          set 键名 键值
redis_cli.get("name").decode()                          get 键名 
redis_cli.delete("name")                                del 键名 键值
redis_cli.zadd(USER_ID, {UUID:10})                      zadd 类名 {内容:权重}   
-------------------------------------------------------------------------------- redis 过期通知
 - conf 文件里面取消注释

notify-keyspace-events Ex

 - 功能
     - K：keyspace事件，事件以__keyspace@<库名>__为前缀进行发布；
     - E：keyevent事件，事件以__keyevent@<库名>__为前缀进行发布；
     - g：一般性的，非特定类型的命令，比如del，expire，rename等；
     - $：字符串特定命令；
     - l：列表特定命令；
     - s：集合特定命令；
     - h：哈希特定命令；
     - z：有序集合特定命令；
     - x：过期事件，当某个键过期并删除时会产生该事件；
     - e：驱逐事件，当某个键因maxmemore策略而被删除时，产生该事件；
     - A：g$lshzxe的别名，因此”AKE”意味着所有事件。
     - 这些选项中，至少要包含K或者E，否则就没啥用了













